"use strict";function _createForOfIteratorHelper(b,c){var d="undefined"!=typeof Symbol&&b[Symbol.iterator]||b["@@iterator"];if(!d){if(Array.isArray(b)||(d=_unsupportedIterableToArray(b))||c&&b&&"number"==typeof b.length){d&&(b=d);var e=0,f=function(){};return{s:f,n:function(){return e>=b.length?{done:!0}:{done:!1,value:b[e++]}},e:function(a){throw a},f:f}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var g,h=!0,i=!1;return{s:function(){d=d.call(b)},n:function(){var a=d.next();return h=a.done,a},e:function(a){i=!0,g=a},f:function(){try{h||null==d["return"]||d["return"]()}finally{if(i)throw g}}}}function _unsupportedIterableToArray(b,c){if(b){if("string"==typeof b)return _arrayLikeToArray(b,c);var a={}.toString.call(b).slice(8,-1);return"Object"===a&&b.constructor&&(a=b.constructor.name),"Map"===a||"Set"===a?Array.from(b):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?_arrayLikeToArray(b,c):void 0}}function _arrayLikeToArray(b,c){(null==c||c>b.length)&&(c=b.length);for(var d=0,f=Array(c);d<c;d++)f[d]=b[d];return f}var label_nodes=new Map,node_labels=new Map,height_factor=.5,zoomScale=d3.scaleLog().domain([1,100]).range([5,.8]);d3.json("/influence-graph.json").then(function(a){var b,c=_createForOfIteratorHelper(a.nodes);try{for(c.s();!(b=c.n()).done;){var d=b.value;node_labels.set(d.id,d.label),label_nodes.set(d.label,d.id)}}catch(a){c.e(a)}finally{c.f()}var e,f=[],g=[],h=new Set([wikibase]),i=_createForOfIteratorHelper(a.links);try{for(i.s();!(e=i.n()).done;){var j=e.value;j.source==wikibase?(h.add(j.target),g.push(node_labels.get(j.target))):j.target==wikibase&&(h.add(j.source),f.push(node_labels.get(j.source)))}}catch(a){i.e(a)}finally{i.f()}var k=a.nodes.filter(function(a){return h.has(a.id)}),l=a.links.filter(function(a){return h.has(a.source)&&h.has(a.target)}),m=document.getElementById("network"),n=m.getBoundingClientRect().width;m.style.height="".concat(n*height_factor,"px");var o=new DiGraph(k,l,"outdegree","mouse");o.draw("#network"),o.zoom.scaleTo(o.g,zoomScale(o.nodes.length))});